#!/bin/bash

__udocker_name=${UDOCKER_WRAPPER:-udocker}

function logmsg() { printf "[$__udocker_name.msg] $@";     }
function logerr() { printf "[$__udocker_name.err] $@" >&2; }

function __udocker_help() {
  echo "Usage: $__udocker_name [config-path] [command]"
}

function __udocker_build() {
  docker build $UDOCKER_BUILD_FLAGS -t $UDOCKER_IMG:$UDOCKER_TAG .
}

function __udocker_run() {
  docker run $UDOCKER_RUN_FLAGS --name $UDOCKER_CTR $UDOCKER_IMG:$UDOCKER_TAG $@
}

function __udocker_exec() {
  docker exec $UDOCKER_EXEC_FLAGS $UDOCKER_CTR $@
}

function __udocker_stop() {
  logmsg "Stopping container: "
  docker stop $UDOCKER_CTR
}

function __udocker_clean() {
  if (docker inspect $UDOCKER_CTR > /dev/null 2>&1); then
    logmsg "Removing container: $UDOCKER_CTR\n"
    docker rm -f $UDOCKER_CTR
  fi
  if (docker inspect $UDOCKER_IMG:$UDOCKER_TAG > /dev/null 2>&1); then
    logmsg "Removing image: $UDOCKER_IMG:$UDOCKER_TAG\n"
    docker rmi $UDOCKER_IMG:$UDOCKER_TAG
  fi
}

function __udocker_cmd_process() {
  local cmd=$1
  local arg=${@:2}
  case $cmd in
    build)  { __udocker_build;        };;
    run)    { __udocker_run "$arg";   };;
    exec)   { __udocker_exec "$arg";  };;
    stop)   { __udocker_stop;         };;
    clean)  { __udocker_clean;        };;
    *) {
      logerr "Unknown command: $cmd\n"
      logerr "Try: $__udocker_name -h|--help|help\n"
      return 1;
    };;
  esac
}

set -e
if [[ $# -eq 0 || "$1" == "-h" || "$1" == "--help" || "$1" == "help" ]]; then
  __udocker_help
  exit 1
fi

if [ -z "$UDOCKER_IMG" ]; then
  logerr "Couldn't proceed. UDOCKER_IMG variable is required\n"
  exit 1
fi
if [ -z "$UDOCKER_TAG" ]; then
  logerr "Couldn't proceed. UDOCKER_TAG variable is required\n"
  exit 1
fi
if [ -z "$UDOCKER_CTR" ]; then
  logerr "Couldn't proceed. UDOCKER_CTR variable is required\n"
  exit 1
fi

logmsg "Using image: $UDOCKER_IMG:$UDOCKER_TAG\n"
logmsg "Using container: $UDOCKER_CTR\n"

__udocker_cmd_process "$@"